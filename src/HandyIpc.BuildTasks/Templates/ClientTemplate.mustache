//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by HandyIpc.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using HandyIpc;
using HandyIpc.Client;

{{#ClassList}}
namespace {{Namespace}}
{
    {{#UsingList}}
    using {{.}};
    {{/UsingList}}

    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.Reflection.Obfuscation(Exclude = true)]
    public class HandyIpcClient{{GeneratedClassSuffix}}{{#TypeParameters}}<{{.}}>{{/TypeParameters}}
        : {{InterfaceName}}{{#TypeParameters}}<{{.}}>{{/TypeParameters}}
        {{ConstraintClauses}}
    {
        private readonly IRmiClient _client;
        private readonly string _identifier;
        private readonly string _accessToken;

        public HandyIpcClient{{GeneratedClassSuffix}}(IRmiClient client, string identifier, string accessToken)
        {
            _client = client;
            _identifier = identifier;
            _accessToken = accessToken;
        }
{{#MethodList}}

        {{#IsAwaitable}}async {{/IsAwaitable}}{{ReturnType}} {{InterfaceName}}{{#TypeParameters}}<{{.}}>{{/TypeParameters}}.{{Name}}{{#MethodTypeParameters}}<{{.}}>{{/MethodTypeParameters}}({{TypeAndParameters}}) {{MethodConstraintClauses}}
        {
            {{#IsAwaitable}}
            var response = await _client.InvokeAsync<{{^IsVoid}}{{TaskReturnType}}{{/IsVoid}}{{#IsVoid}}byte[]{{/IsVoid}}>(
            {{/IsAwaitable}}
            {{^IsAwaitable}}
            var response = _client.Invoke<{{^IsVoid}}{{ReturnType}}{{/IsVoid}}{{#IsVoid}}byte[]{{/IsVoid}}>(
            {{/IsAwaitable}}
                _identifier,
                new Request("{{Name}}{{#MethodTypeParameters}}<{{.}}>{{/MethodTypeParameters}}({{ParameterTypes}})")
                {
                    AccessToken = _accessToken,
                    {{#TypeArguments}}
                    GenericArguments = new[] { {{.}} },
                    {{/TypeArguments}}
                    {{#MethodTypeArguments}}
                    MethodGenericArguments = new[] { {{.}} },
                    {{/MethodTypeArguments}}
                    {{#MethodTypeParameters}}
                    {{#MethodParameterTypes}}
                    ArgumentTypes = new[] { {{.}} },
                    {{/MethodParameterTypes}}
                    {{/MethodTypeParameters}}
                },
                Signals.GetArgumentList(
                    {{#Parameters}}
                    new object[] { {{.}} },
                    {{/Parameters}}
                    {{^Parameters}}
                    null,
                    {{/Parameters}}
                    {{#MethodParameterTypes}}
                    new Type[] { {{.}} }
                    {{/MethodParameterTypes}}
                    {{^MethodParameterTypes}}
                    null
                    {{/MethodParameterTypes}}
                ));
            {{#IsVoid}}
            if (!response.IsUnit())
            {
                throw new InvalidOperationException("A method that returns void type must responses the Unit object.");
            }
            {{/IsVoid}}
            {{^IsVoid}}
            return response;
            {{/IsVoid}}
        }
{{/MethodList}}
    }
}

{{/ClassList}}
