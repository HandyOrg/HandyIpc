using System;
using HandyIpc;
using HandyIpc.Client;

{{#ClassList}}

namespace {{Namespace}}
{
{{#UsingList}}
using {{.}};
{{/UsingList}}

    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.Reflection.Obfuscation(Exclude = true)]
    public class AutoGeneratedServerProxy{{GeneratedClassSuffix}}{{#TypeParameters}}<{{.}}>{{/TypeParameters}}
        : {{InterfaceName}}{{#TypeParameters}}<{{.}}>{{/TypeParameters}}
        {{ConstraintClauses}}
    {
        private readonly {{InterfaceName}}{{#TypeParameters}}<{{.}}>{{/TypeParameters}} _instance;

        public AutoGeneratedServerProxy{{GeneratedClassSuffix}}({{InterfaceName}}{{#TypeParameters}}<{{.}}>{{/TypeParameters}} instance) 
        {
            _instance = instance;
        }
{{#MethodList}}

        [IpcMethod("{{Name}}{{#MethodTypeParameters}}<{{.}}>{{/MethodTypeParameters}}({{ParameterTypes}})")]
        {{ReturnType}} {{InterfaceName}}{{#TypeParameters}}<{{.}}>{{/TypeParameters}}.{{Name}}{{#MethodTypeParameters}}<{{.}}>{{/MethodTypeParameters}}({{TypeAndParameters}}) {{MethodConstraintClauses}}
        {
            {{^IsVoid}}return {{/IsVoid}}_instance.{{Name}}{{#MethodTypeParameters}}<{{.}}>{{/MethodTypeParameters}}({{Parameters}});
        }
{{/MethodList}}
    }
}
{{/ClassList}}